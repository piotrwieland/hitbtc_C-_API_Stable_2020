/* 
 * HitBTC API
 *
 * Create API keys in your profile https://hitbtc.com/settings/api-keys and use public API key as username and secret as password to authorize. 
 *
 * OpenAPI spec version: 2.1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing TradingHistoryApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class TradingHistoryApiTests
    {
        private TradingHistoryApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TradingHistoryApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TradingHistoryApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TradingHistoryApi
            //Assert.IsInstanceOfType(typeof(TradingHistoryApi), instance, "instance is a TradingHistoryApi");
        }

        
        /// <summary>
        /// Test HistoryOrderGet
        /// </summary>
        [Test]
        public void HistoryOrderGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string symbol = null;
            //string from = null;
            //string till = null;
            //int? limit = null;
            //int? offset = null;
            //string clientOrderId = null;
            //var response = instance.HistoryOrderGet(symbol, from, till, limit, offset, clientOrderId);
            //Assert.IsInstanceOf<List<Order>> (response, "response is List<Order>");
        }
        
        /// <summary>
        /// Test HistoryOrderIdTradesGet
        /// </summary>
        [Test]
        public void HistoryOrderIdTradesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.HistoryOrderIdTradesGet(id);
            //Assert.IsInstanceOf<List<Trade>> (response, "response is List<Trade>");
        }
        
        /// <summary>
        /// Test HistoryTradesGet
        /// </summary>
        [Test]
        public void HistoryTradesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string symbol = null;
            //string sort = null;
            //string by = null;
            //string from = null;
            //string till = null;
            //int? limit = null;
            //int? offset = null;
            //var response = instance.HistoryTradesGet(symbol, sort, by, from, till, limit, offset);
            //Assert.IsInstanceOf<List<Trade>> (response, "response is List<Trade>");
        }
        
    }

}
