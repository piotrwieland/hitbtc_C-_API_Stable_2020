/* 
 * HitBTC API
 *
 * Create API keys in your profile https://hitbtc.com/settings/api-keys and use public API key as username and secret as password to authorize. 
 *
 * OpenAPI spec version: 2.1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Orderbook
    /// </summary>
    [DataContract]
    public partial class Orderbook :  IEquatable<Orderbook>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Orderbook" /> class.
        /// </summary>
        /// <param name="ask">ask.</param>
        /// <param name="bid">bid.</param>
        /// <param name="timestamp">timestamp.</param>
        public Orderbook(List<OrderbookAsk> ask = default(List<OrderbookAsk>), List<OrderbookAsk> bid = default(List<OrderbookAsk>), DateTime? timestamp = default(DateTime?))
        {
            this.Ask = ask;
            this.Bid = bid;
            this.Timestamp = timestamp;
        }
        
        /// <summary>
        /// Gets or Sets Ask
        /// </summary>
        [DataMember(Name="ask", EmitDefaultValue=false)]
        public List<OrderbookAsk> Ask { get; set; }

        /// <summary>
        /// Gets or Sets Bid
        /// </summary>
        [DataMember(Name="bid", EmitDefaultValue=false)]
        public List<OrderbookAsk> Bid { get; set; }

        /// <summary>
        /// Gets or Sets Timestamp
        /// </summary>
        [DataMember(Name="timestamp", EmitDefaultValue=false)]
        public DateTime? Timestamp { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Orderbook {\n");
            sb.Append("  Ask: ").Append(Ask).Append("\n");
            sb.Append("  Bid: ").Append(Bid).Append("\n");
            sb.Append("  Timestamp: ").Append(Timestamp).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Orderbook);
        }

        /// <summary>
        /// Returns true if Orderbook instances are equal
        /// </summary>
        /// <param name="input">Instance of Orderbook to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Orderbook input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Ask == input.Ask ||
                    this.Ask != null &&
                    this.Ask.SequenceEqual(input.Ask)
                ) && 
                (
                    this.Bid == input.Bid ||
                    this.Bid != null &&
                    this.Bid.SequenceEqual(input.Bid)
                ) && 
                (
                    this.Timestamp == input.Timestamp ||
                    (this.Timestamp != null &&
                    this.Timestamp.Equals(input.Timestamp))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Ask != null)
                    hashCode = hashCode * 59 + this.Ask.GetHashCode();
                if (this.Bid != null)
                    hashCode = hashCode * 59 + this.Bid.GetHashCode();
                if (this.Timestamp != null)
                    hashCode = hashCode * 59 + this.Timestamp.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
